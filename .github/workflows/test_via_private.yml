name: Curseforge Release

on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # Build the zip file
  build-zip-file:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # specify the environment variables used by the packager, matching the secrets from the project on GitHub
    env:
      PROJECT_NAME: "LibMVC-1.0"
      ZIP_FILE_NAME: ""

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Generate Zip file
        run: |

          # Get today's date in YYYY-MM-DD format
          DATE=$(date +%F)
        
          # Replace spaces in the value from action variable with underscores
          VALUE_FROM_VARIABLE=$(echo "${{ github.event_name }}" | tr ' ' '_')
        
          # Combine date and value to form the zip file name
          DISPLAY_NAME="$PROJECT_NAME ${DATE}" 
          ZIP_FILE_NAME="$DISPLAY_NAME.zip"
          
          zip -r "$ZIP_FILE_NAME" * -x README.md
          echo "File name: $ZIP_FILE_NAME"

          # Set as environment variable for the next step
          echo "$ZIP_FILE_NAME|$DISPLAY_NAME|${{ vars.CURSEFORGE_PROJECT_ID }}" > curseforge-upload-params.txt
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: curseforge-upload-params
          path: curseforge-upload-params.txt

  # Job 2: Send the zip to the private repo
  trigger-curse-upload:
    needs: build-zip-file
    uses: Thaoky/CurseForgeUploader/.github/workflows/main.yml@main
    secrets:
      envPAT: ${{ secrets.envPAT }}	
      
